 function () {

    return function () {

        var currTime = 0,
            prevTime = 0,
            speed = 0;
        
        this.startSystemTime = 0;
        this.momentFunctions = [{{{momentFunctions}}}];
        this.intervalFunctions = [{{{intervalFunctions}}}];

        this.step = function(time) {

            this.stepRafId = requestAnimationFrame(this.step);
            
            prevTime = currTime;
            currTime = performance.now();

            this.momentFunctions.forEach(function (fnData) {

                if (fnData.time > prevTime && fnData.time <= currTime) {

                    fnData.fn();
                }
            });

            this.intervalFunctions.forEach(function (fnData) {

                for (var i = 0; i < fnData.bounds; i += 2) {

                    if (fnData.bounds[i] > prevTime && fnData.bounds[i+1] <= currTime) {

                        fnData.fn();
                    }
                }
            });

        }.bind(this);

        var ret = {};

        ret.play = function () {

            this.step();

        }.bind(this);

        ret.pause = function () {

            cancelAnimationFrame(this.stepRafId);

        }.bind(this);

        ret.seek = function (time) {

            currTime = time;
            prevTime = time;

        }.bind(this);

    }.call({});
};